/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/

var f=Object.defineProperty;var v=Object.getOwnPropertyDescriptor;var p=Object.getOwnPropertyNames;var g=Object.prototype.hasOwnProperty;var w=(r,t)=>{for(var e in t)f(r,e,{get:t[e],enumerable:!0})},y=(r,t,e,a)=>{if(t&&typeof t=="object"||typeof t=="function")for(let n of p(t))!g.call(r,n)&&n!==e&&f(r,n,{get:()=>t[n],enumerable:!(a=v(t,n))||a.enumerable});return r};var N=r=>y(f({},"__esModule",{value:!0}),r);var F={};w(F,{default:()=>u});module.exports=N(F);var l=require("obsidian");function i(r){var t=new Error(r);return t.source="ulid",t}var c="0123456789ABCDEFGHJKMNPQRSTVWXYZ",o=c.length,d=Math.pow(2,48)-1,b=10,M=16;function E(r){var t=Math.floor(r()*o);return t===o&&(t=o-1),c.charAt(t)}function I(r,t){if(isNaN(r))throw new Error(r+" must be a number");if(r>d)throw i("cannot encode time greater than "+d);if(r<0)throw i("time must be positive");if(Number.isInteger(r)===!1)throw i("time must be an integer");for(var e=void 0,a="";t>0;t--)e=r%o,a=c.charAt(e)+a,r=(r-e)/o;return a}function A(r,t){for(var e="";r>0;r--)e=E(t)+e;return e}function C(){var r=arguments.length>0&&arguments[0]!==void 0?arguments[0]:!1,t=arguments[1];t||(t=typeof window!="undefined"?window:null);var e=t&&(t.crypto||t.msCrypto);if(e)return function(){var n=new Uint8Array(1);return e.getRandomValues(n),n[0]/255};try{var a=require("crypto");return function(){return a.randomBytes(1).readUInt8()/255}}catch(n){}if(r){try{console.error("secure crypto unusable, falling back to insecure Math.random()!")}catch(n){}return function(){return Math.random()}}throw i("secure crypto unusable, insecure Math.random not allowed")}function x(r){return r||(r=C()),function(e){return isNaN(e)&&(e=Date.now()),I(e,b)+A(M,r)}}var s=x();function h(r){return async function(t){var a,n;let e="id";(n=(a=r.metadataCache.getFileCache(t))==null?void 0:a.frontmatter)!=null&&n[e]||await r.fileManager.processFrontMatter(t,m=>{m[e]=s()})}}function D(r){let t=h(r);return function(){r.vault.getMarkdownFiles().forEach(e=>t(e))}}var u=class extends l.Plugin{async onload(){this.registerEvent(this.app.metadataCache.on("changed",h(this.app))),this.addCommand({id:"add-ids-to-all-notes",name:"Add an ID to all notes",callback:D(this.app)})}};
